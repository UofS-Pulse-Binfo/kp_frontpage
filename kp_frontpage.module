<?php
/**
 * @file
 * The main code for KP Frontpage.
 */

/**
 * Implements hook_theme_registry_alter().
 */
function kp_frontpage_theme_registry_alter(&$theme_registry) {

  // Defined path to the current module.
  $module_path = drupal_get_path('module', 'kp_frontpage') . '/templates';

  // Find all .tpl.php files in this module's folder recursively.
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);

  // Iterate through all found template file objects.
  foreach ($template_file_objects as $key => $template_file_object) {

    // If the template has not already been overridden by a theme.
    if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
      // Alter the theme path and template elements.
      $theme_registry[$key]['theme path'] = $module_path;
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
      $theme_registry[$key]['type'] = 'module';
    }
  }
}

/**
 * Implements hook_preprocess_page().
 */
function kptheme_preprocess_page(&$vars, $hook) {

  // Only in homepage of KP
  if (drupal_is_front_page()) {
    $d3_lib = libraries_get_path('d3');
    drupal_add_js($d3_lib . '/d3.js');

    $path = drupal_get_path('module', 'kp_frontpage');
    drupal_add_css($path . '/kp_frontpage.css');

    drupal_add_js($path  . '/js/kptheme_kphome_d3kpdata_we_have.js');
    drupal_add_js($path  . '/js/kptheme_kphome_slideshow.js');

    // KP Main slideshow and footer slideshows (Project and Publication).
    // Note: for footer slideshow we just render the first 5 view rows.
    $arr_views = array(
      'main_slideshow_view'     => 'kp_frontpage_main_slideshow',
      'copy_crops_view'         => 'uofs_crop_species',
      'footer_project_view'     => 'kp_frontpage_footer_projects_slideshow_tripal_3',
      'footer_publication_view' => 'kp_frontpage_footer_publication_slideshow_tripal_3'
    );

    foreach($arr_views as $i => $view) {
      $vtemp = views_get_view_result($view, 'default');

      if ($i == 'copy_crops_view') {
        $arr_view_rows = array();
        foreach($vtemp as $v) {
          array_push($arr_view_rows, array('title'   => $v->organism_common_name,
                                           'genus'   => $v->organism_genus,
                                           'species' => $v->organism_species));
        }

        $vars[$i] = $arr_view_rows;
      }
      else {
        $vars[$i] = count($vtemp);
      }
    }

    // KnowPulse Stats
    // Array to hold values required by bar chart
    $arr_stats_bar = array();
    // Array to hol values required by bubble chart
    $arr_stats_bubble = array();

    $sql = "SELECT * FROM {kp_frontpage_stats} ORDER BY chart ASC";
    $result = chado_query($sql);
    foreach($result as $stat) {
      if ($stat->chart == 'br') {
        // Bar chart.
        $arr_stats_bar[$stat->type] = $stat->count;
      }
      else {
        // Bubble chart.
        $arr_stats_bubble[$stat->type] = $stat->count;
      }
    }

    // Register preprocess variables.
    $vars['stats_bar_chart'] = $arr_stats_bar;
    $vars['stats_bubble_chart'] = $arr_stats_bubble;
  }
}

/**
 * Implementation of hook_views_api()
 */
function kp_frontpage_views_api() {
  return array('api' => 3.0);
}

/**
 * Implements hook_node_info().
 */
function kp_frontpage_node_info() {
  $content_type = array(
    // Machine name.
    'kp_frontpage_cms' => array(
      // Human-readable name.
      'name' => t('KP Frontpage Content'),
      // Description.
      'description' => t('Manage KP frontpage content.'),
      // Title.
      'has_title' => TRUE,
      'title_label' => t('Content Title:'),
      // Base name for implementation. Usually the module name.
      'base' => 'kp_frontpage',
      // Disable option to let administrators change the machine
      // name of this content type.
      'locked' => TRUE,
    )
  );

  return $content_type;
}

/**
 * Implements hook_form().
 */
function kp_frontpage_form($node, $form_state) {
  return node_content_form($node, $form_state);
}
